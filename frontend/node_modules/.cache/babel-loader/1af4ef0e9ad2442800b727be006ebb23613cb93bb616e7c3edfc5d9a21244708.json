{"ast":null,"code":"var _jsxFileName = \"/Users/guddu/Desktop/VS Code Projects/prompt-optimizer-app/frontend/prompt-optimizer/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\n// frontend/prompt-optimizer/src/components/Dashboard.js\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport OptimizePrompt from './OptimizePrompt';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard({\n  token\n}) {\n  _s();\n  const [prompts, setPrompts] = useState([]);\n  const [message, setMessage] = useState('');\n  const fetchPrompts = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/prompts/', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setPrompts(response.data);\n    } catch (error) {\n      setMessage('Failed to fetch prompts');\n    }\n  };\n  useEffect(() => {\n    fetchPrompts();\n    // eslint-disable-next-line\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Prompts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OptimizePrompt, {\n      token: token,\n      onPromptCreated: fetchPrompts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: prompts.map(prompt => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Original:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), \" \", prompt.original_text, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Optimized:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), \" \", prompt.optimized_text, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"em\", {\n          children: [\"Created at: \", new Date(prompt.created_at).toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)]\n      }, prompt.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"9J71+I4h9y9voI/jQoVCI+nhosA=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","axios","OptimizePrompt","jsxDEV","_jsxDEV","Dashboard","token","_s","prompts","setPrompts","message","setMessage","fetchPrompts","response","get","headers","Authorization","data","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onPromptCreated","map","prompt","original_text","optimized_text","Date","created_at","toLocaleString","id","_c","$RefreshReg$"],"sources":["/Users/guddu/Desktop/VS Code Projects/prompt-optimizer-app/frontend/prompt-optimizer/src/components/Dashboard.js"],"sourcesContent":["// frontend/prompt-optimizer/src/components/Dashboard.js\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport OptimizePrompt from './OptimizePrompt';\n\nfunction Dashboard({ token }) {\n  const [prompts, setPrompts] = useState([]);\n  const [message, setMessage] = useState('');\n\n  const fetchPrompts = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/prompts/', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setPrompts(response.data);\n    } catch (error) {\n      setMessage('Failed to fetch prompts');\n    }\n  };\n\n  useEffect(() => {\n    fetchPrompts();\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <div>\n      <h2>Your Prompts</h2>\n      <OptimizePrompt token={token} onPromptCreated={fetchPrompts} />\n      {message && <p>{message}</p>}\n      <ul>\n        {prompts.map((prompt) => (\n          <li key={prompt.id}>\n            <strong>Original:</strong> {prompt.original_text}\n            <br />\n            <strong>Optimized:</strong> {prompt.optimized_text}\n            <br />\n            <em>Created at: {new Date(prompt.created_at).toLocaleString()}</em>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default Dashboard;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,cAAc,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,SAASC,SAASA,CAAC;EAAEC;AAAM,CAAC,EAAE;EAAAC,EAAA;EAC5B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMY,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,oCAAoC,EAAE;QACrEC,OAAO,EAAE;UACPC,aAAa,EAAE,UAAUV,KAAK;QAChC;MACF,CAAC,CAAC;MACFG,UAAU,CAACI,QAAQ,CAACI,IAAI,CAAC;IAC3B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdP,UAAU,CAAC,yBAAyB,CAAC;IACvC;EACF,CAAC;EAEDZ,SAAS,CAAC,MAAM;IACda,YAAY,CAAC,CAAC;IACd;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACER,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAAAe,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBnB,OAAA,CAACF,cAAc;MAACI,KAAK,EAAEA,KAAM;MAACkB,eAAe,EAAEZ;IAAa;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAC9Db,OAAO,iBAAIN,OAAA;MAAAe,QAAA,EAAIT;IAAO;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5BnB,OAAA;MAAAe,QAAA,EACGX,OAAO,CAACiB,GAAG,CAAEC,MAAM,iBAClBtB,OAAA;QAAAe,QAAA,gBACEf,OAAA;UAAAe,QAAA,EAAQ;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACG,MAAM,CAACC,aAAa,eAChDvB,OAAA;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACNnB,OAAA;UAAAe,QAAA,EAAQ;QAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACG,MAAM,CAACE,cAAc,eAClDxB,OAAA;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACNnB,OAAA;UAAAe,QAAA,GAAI,cAAY,EAAC,IAAIU,IAAI,CAACH,MAAM,CAACI,UAAU,CAAC,CAACC,cAAc,CAAC,CAAC;QAAA;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA,GAL5DG,MAAM,CAACM,EAAE;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMd,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAAChB,EAAA,CAxCQF,SAAS;AAAA4B,EAAA,GAAT5B,SAAS;AA0ClB,eAAeA,SAAS;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}